package main

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	connectWithTelegram()

	updConfig := tgbotapi.NewUpdate(0)
	updConfig.Timeout = 60
	updates := bot.GetUpdatesChan(updConfig)

	for update := range updates {
		if update.Message != nil && update.Message.IsCommand() {
			log.Printf(`Message: "%s" User: "%s" Chat: "%s"`, update.Message.Text, update.Message.From.UserName, update.Message.Chat.Title)
			switch update.Message.Command() {
				case "start":
					text := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, *%s*ü§óüò≤\n–ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞üëæ\n/relax - –ö–Ω–æ–ø–∫–∞ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è‚ú®\n/gopher - –°–ª—É—á–∞–π–Ω—ã–π –≥–æ—Ñ–µ—ÄüêøÔ∏è", update.Message.From.FirstName)
					sendMessage(bot, update.Message.Chat.ID, text)
				case "relax":
					sendInlineKeyboard(bot, update.Message.Chat.ID, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è‚ú®")
				case "gopher":
					sendGopher(bot, update.Message.Chat.ID)
			}
		} else if update.Message != nil && update.Message.Chat.Type != "private" {
			switch {
				case update.Message.NewChatTitle != "":
					log.Printf(`User: "%s" New Title: "%s"`, update.Message.From.UserName, update.Message.NewChatTitle)
					text := "–•–æ—Ä–æ—à–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
					sendMessage(bot, update.Message.Chat.ID, text)
				case update.Message.NewChatMembers != nil:
					log.Printf(`New Member: "%s"`, update.Message.NewChatMembers[len(update.Message.NewChatMembers)-1].FirstName)
					text := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, *%s*!", update.Message.NewChatMembers[len(update.Message.NewChatMembers)-1].FirstName)
					sendMessage(bot, update.Message.Chat.ID, text)
				case update.Message.NewChatPhoto != nil:
					log.Printf(`User: "%s" Chat: "%s" New Chat Photo`, update.Message.From.UserName, update.Message.Chat.Title)
					sendMessage(bot, update.Message.Chat.ID, "–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ")
			}
		} else if update.CallbackQuery != nil {
			log.Printf(`User: "%s" Chat: "%s" Data: "%s"`, update.CallbackQuery.From.UserName, update.CallbackQuery.Message.Chat.Title, update.CallbackQuery.Data)
			msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "–ú–æ–∂–µ—Ç –Ω–∞–∂–º—ë—Ç–µ –µ—â—ë —Ä–∞–∑?\n–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ —É—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç‚ú®")
			msg.ReplyMarkup = inlineRelaxButton
			bot.Send(msg)
		}
	}
}